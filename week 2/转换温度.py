# week 2/转换温度.py

TempStr = input("请输入带有符号的温度值：")
if TempStr[-1] in ('F', 'f'):
    C = (eval(TempStr[0:-1]) - 32) / 1.8
    print("转换后的温度是{:.2f}C".format(C))
elif TempStr[-1] in ('C', 'c'):
    F = 1.8 * eval(TempStr[0:-1]) + 32
    print("转换后的温度是{:.2f}F".format(F))
else:
    print("输入格式错误")
 
# TempStr 是一个字符串变量，它包含了待转换的温度值，以及一个表示温度单位的字符（通常是 'F' 表示华氏温度）。

# TempStr[0:-1] 这部分代码是一个字符串切片操作，它会取出 TempStr 中除了最后一个字符之外的所有字符。这样做是为了去掉温度值后面的单位字符，只保留数字部分。

# eval(TempStr[0:-1]) 这里使用了 eval 函数，它会将字符串作为 Python 表达式进行解析，并返回计算结果。在这个上下文中，eval 函数的作用是将温度值的字符串转换为浮点数。

# (eval(TempStr[0:-1]) - 32) / 1.8 这部分代码执行了华氏温度到摄氏温度的转换公式。首先从华氏温度中减去 32，然后除以 1.8，得到对应的摄氏温度值。

# 最后，计算得到的摄氏温度值被赋值给变量 C。

# 需要注意的是，使用 eval 函数可能会带来安全风险，因为它会执行传入的字符串中的代码。如果 TempStr 来自不可信的源，那么这段代码可能会被恶意利用。在实际应用中，应该使用更安全的方法来转换温度，例如使用 float 函数来转换数字字符串。 
 
 
    
# 字符串 "转换后的温度是{:.2f}F"：这是一个格式化字符串，其中 {:.2f} 是一个占位符，表示将要插入一个浮点数，并且这个浮点数将被格式化为保留两位小数的形式。F 是华氏温度的单位。

# .format(F)：这是Python中的字符串格式化方法。它将变量 F 的值插入到字符串中 {:.2f} 的位置，并且按照指定的格式（即保留两位小数）进行格式化。